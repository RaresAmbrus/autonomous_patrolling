cmake_minimum_required(VERSION 2.8.3)
project(waypoint_recorder)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS geometry_msgs roscpp rospy sensor_msgs std_msgs ap_msgs)
find_package(scitos_apps_msgs COMPONENTS scitos_apps_msgs scitos_msgs)

if(scitos_apps_msgs_FOUND)
	message(STATUS "scitos_apps_msgs found: Compiling waypoint_recorder with joystick support")
	add_definitions(-DWITH_TELEOP)
else(scitos_apps_msgs_FOUND)
	message(STATUS "scitos_apps_msgs NOT found: Compiling waypoint_recorder without joystick support")
endif(scitos_apps_msgs_FOUND)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)


## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/groovy/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder


## Generate added messages and services with any dependencies listed here


###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES waypoint_recorder
# CATKIN_DEPENDS geometry_msgs roscpp rospy sensor_msgs std_msgs message_runtime
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(include
  ${catkin_INCLUDE_DIRS}
  ${scitos_apps_msgs_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(waypoint_recorder
#   src/${PROJECT_NAME}/waypoint_recorder.cpp
# )

## Declare a cpp executable
 add_executable(waypoint_recorder src/waypoint_recorder.cpp)
 add_executable(waypoint_recorder_with_pt src/waypoint_recorder_with_pt.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
add_dependencies(waypoint_recorder ap_msgs_gencpp)
add_dependencies(waypoint_recorder_with_pt ap_msgs_gencpp)

## Specify libraries to link a library or executable target against
 target_link_libraries(waypoint_recorder
   ${catkin_LIBRARIES}
   ${scitos_apps_msgs_LIBRARIES}
 )

 target_link_libraries(waypoint_recorder_with_pt
   ${catkin_LIBRARIES}
   ${scitos_apps_msgs_LIBRARIES}
 )
#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/groovy/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS waypoint_recorder waypoint_recorder_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_waypoint_recorder.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
